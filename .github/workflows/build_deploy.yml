name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 13 * * *'

jobs:
  build_push:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Skip CI check
        uses: mstachniuk/ci-skip@v1

      - name: Set up Node.js
        if: env.CI_SKIP == 'false'
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Set yarn cache directory
        if: env.CI_SKIP == 'false'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Get yarn cache
        uses: actions/cache@v2
        if: env.CI_SKIP == 'false'
        id: yarn-cache
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-yarn-

      - name: Download source data
        if: |
          env.CI_SKIP == 'false' &&
          github.event_name != 'pull_request'
        run: bin/update.sh

      - name: Install and build
        if: env.CI_SKIP == 'false'
        run: |
          yarn
          yarn build

      - name: Upload build artifacts
        if: |
          env.CI_SKIP == 'false' &&
          github.event_name != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: Push source data to GitHub
        if: |
          env.CI_SKIP == 'false' &&
          github.event_name != 'pull_request'
        env:
          GIT_AUTHOR_NAME: ffflobot
          GIT_AUTHOR_EMAIL: ffflobot@users.noreply.github.com
          GIT_COMMITTER_NAME: ffflobot
          GIT_COMMITTER_EMAIL: ffflobot@users.noreply.github.com
          GITHUB_TOKEN: ${{secrets.REPO_ACCESS_TOKEN}}
        run: |
          git config --global "user.email" "${GIT_AUTHOR_EMAIL}"
          git config --global "user.name" "${GIT_AUTHOR_NAME}"
          REPO_URL="$(git remote get-url origin | sed -n "s/https:\/\/github.com\//https:\/\/${GIT_AUTHOR_NAME}:${GITHUB_TOKEN}@github.com\//p")"
          git remote set-url origin "${REPO_URL}"
          git checkout main
          git add src/data.json
          git diff-index --quiet HEAD || git commit -m "chore: Update data"
          git push

  deploy:
    name: Deploy
    needs: build_push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Skip CI check
        uses: mstachniuk/ci-skip@v1

      - name: Download build artifacts
        if: env.CI_SKIP == 'false'
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Deploy to GitHub Pages
        if: env.CI_SKIP == 'false'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist
          CLEAN: true

      - name: Delete build artifacts
        if: env.CI_SKIP == 'false'
        uses: geekyeggo/delete-artifact@v1
        with:
          name: dist
